name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            frontend/node_modules
            backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Install backend dependencies
        run: npm install
        working-directory: backend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Lint frontend
        run: npm run lint
        working-directory: frontend

      - name: Test backend
        run: npm test
        working-directory: backend
        env:
          MONGODB_URI: mongodb+srv://aviralasthana0704:${{secrets.MONGO_PASS}}@spendify-cluster.zxlchty.mongodb.net/expense-tracker

      - name: Docker build
        run: docker-compose build

      - name: Docker run
        run: docker-compose up -d

      - name: Wait for services to be ready
        run: sleep 30

      - name: Run backend tests
        run: npm test
        working-directory: backend
        env:
          MONGODB_URI: mongodb+srv://aviralasthana0704:${{secrets.MONGO_PASS}}@spendify-cluster.zxlchty.mongodb.net/expense-tracker

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push